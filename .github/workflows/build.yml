name: Build and Lint TM4C129 Firmware

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  lint:
    runs-on: ubuntu-latest
    continue-on-error: true  # Make linting optional for now
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install linting tools
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-format cppcheck

      - name: Run clang-format check
        continue-on-error: true  # Don't fail on formatting differences
        run: |
          # Only check src/ and inc/ directories which contain your code
          # Exclude TivaWare and other third-party libraries
          python3 tools/run-clang-format.py --recursive --extensions=c,h src/ inc/ || true

      - name: Run cppcheck static analysis
        run: |
          # Only analyze src/ and inc/ directories which contain your code
          # Exclude startup.c which has special memory handling patterns that cppcheck flags incorrectly
          find src/ inc/ -name "*.c" -o -name "*.h" | grep -v "startup.c" | xargs \
            cppcheck --enable=warning,performance,portability --suppress=missingIncludeSystem --error-exitcode=1 \
              --std=c99 --language=c --inline-suppr \
              -I inc/ -I libraries/TivaWare/inc/ -I libraries/TivaWare/driverlib/

  build:
    runs-on: ubuntu-latest
    needs: lint
    env:
      CI: true  # Set CI environment variable for CMake to detect
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install ARM toolchain
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-arm-none-eabi binutils-arm-none-eabi libnewlib-arm-none-eabi cmake ninja-build

      # Copy the existing libraries directory structure from the repo
      - name: Setup TivaWare library structure
        run: |
          # Make sure the essential directories exist
          mkdir -p libraries/TivaWare/driverlib
          mkdir -p libraries/TivaWare/inc

          # Use the empty mock file approach just for CI
          echo "// Mock driverlib for CI builds" > libraries/TivaWare/driverlib/driverlib_mock.c

          # Copy any existing headers from the libraries directory
          if [ -d "libraries/TivaWare" ]; then
            echo "Using existing TivaWare library structure from repo"
          fi

      - name: Configure CMake
        run: |
          mkdir -p build
          cd build
          cmake .. -G Ninja

      - name: Build project
        run: |
          cd build
          ninja

      - name: Upload firmware artifact
        # Only upload artifacts when running on GitHub servers, not locally
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v3
        with:
          name: firmware
          path: |
            build/TM4C129ENCPDT.bin
            build/TM4C129ENCPDT.elf

      - name: Display build summary for local runs
        if: ${{ env.ACT }}
        run: |
          echo "==== Build completed successfully ===="
          echo "Firmware files generated:"
          ls -la build/TM4C129ENCPDT.bin build/TM4C129ENCPDT.elf
          echo "Binary size:"
          arm-none-eabi-size build/TM4C129ENCPDT.elf
